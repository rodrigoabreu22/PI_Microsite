"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[586],{2820:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"milestones/ms2/requirements","title":"Requirements","description":"Here is presented the requirements elicitation methods, functional requirements (divided by the respective components) and non-functional requirements.","source":"@site/docs/milestones/ms2/requirements.md","sourceDirName":"milestones/ms2","slug":"/milestones/ms2/requirements","permalink":"/PI_Microsite/docs/milestones/ms2/requirements","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Use Cases & Scenario","permalink":"/PI_Microsite/docs/milestones/ms2/use_cases"},"next":{"title":"Architecture","permalink":"/PI_Microsite/docs/milestones/ms2/architecture"}}');var s=i(4848),r=i(8453);const l={sidebar_position:4},a="Requirements",o={},d=[{value:"Requirements Elicitation",id:"requirements-elicitation",level:2},{value:"Functional Requirements",id:"functional-requirements",level:2},{value:"Data Collection",id:"data-collection",level:3},{value:"Model",id:"model",level:3},{value:"Monitoring Dashboard",id:"monitoring-dashboard",level:3},{value:"External Integration",id:"external-integration",level:3},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:2},{value:"Scalability",id:"scalability",level:3},{value:"Performance",id:"performance",level:3},{value:"Security",id:"security",level:3},{value:"Maintainability",id:"maintainability",level:3},{value:"Interoperability",id:"interoperability",level:3}];function c(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"requirements",children:"Requirements"})}),"\n",(0,s.jsx)(n.p,{children:"Here is presented the requirements elicitation methods, functional requirements (divided by the respective components) and non-functional requirements."}),"\n",(0,s.jsx)(n.h2,{id:"requirements-elicitation",children:"Requirements Elicitation"}),"\n",(0,s.jsxs)(n.p,{children:["This process was divided into four parts. The first part consisted of investigating the project's theme and its context to obtain maximum knowledge in the field of ",(0,s.jsx)(n.strong,{children:"telecommunications and 5G networks"}),". Next, we had to evaluate the most correct way to relate this to the ",(0,s.jsx)(n.strong,{children:"data engineering and Machine Learning"})," part of the project. After that, we explored the ",(0,s.jsx)(n.strong,{children:"state of the art"}),", evaluating other research works in the area and gathering important information for ",(0,s.jsx)(n.strong,{children:"discussion among us"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"functional-requirements",children:"Functional Requirements"}),"\n",(0,s.jsx)(n.h3,{id:"data-collection",children:"Data Collection"}),"\n",(0,s.jsx)(n.p,{children:"The system:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"must collect and store raw data in a time series data base."}),"\n",(0,s.jsx)(n.li,{children:"system should support JSON and CSV data formats."}),"\n",(0,s.jsx)(n.li,{children:"system should perform data pre-processing, including cleaning, normalization, and aggregation to ensure quality and consistency."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"model",children:"Model"}),"\n",(0,s.jsx)(n.p,{children:"The system should:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"train machine learning (ML) models using frameworks such as PyTorch or Scikit-learn."}),"\n",(0,s.jsx)(n.li,{children:"allow model training with stored data."}),"\n",(0,s.jsx)(n.li,{children:"implement automation in model training, supporting continuous re-training based on new data or data drift."}),"\n",(0,s.jsx)(n.li,{children:"validate and test the models using the obtained metrics."}),"\n",(0,s.jsx)(n.li,{children:"support a continuous deployment mechanism to automatically move validated models from the test environment to production."}),"\n",(0,s.jsx)(n.li,{children:"be able to identify the relevant features for anomaly prediction."}),"\n",(0,s.jsx)(n.li,{children:"not allow the use of future data to train the model."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"monitoring-dashboard",children:"Monitoring Dashboard"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must show anomaly alerts."}),"\n",(0,s.jsx)(n.li,{children:"Must show relevant metrics."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"external-integration",children:"External Integration"}),"\n",(0,s.jsx)(n.p,{children:"The system should:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"provide APIs so that external functions can subscribe to anomaly and failure events."}),"\n",(0,s.jsx)(n.li,{children:"enable compliance with 5G architecture standards."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"non-functional-requirements",children:"Non-Functional Requirements"}),"\n",(0,s.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The system must efficiently process large volumes of data with a maximum processing latency of 100 milliseconds."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"To support real-time analytics, data processing should have minimal latency and a response time inferior to 1 millisecond."}),"\n",(0,s.jsx)(n.li,{children:"ML inference APIs should provide responses within 1 millisecond for fast decision-making."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The system must be GDPR compliant and keep all data on-premise."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"maintainability",children:"Maintainability"}),"\n",(0,s.jsx)(n.p,{children:"The system:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"should use modular components to allow easy updates and debugging."}),"\n",(0,s.jsx)(n.li,{children:"must allow modules to be replaced by others with higher performance, with minimal impact on other modules."}),"\n",(0,s.jsx)(n.li,{children:"must be easily adaptable for deployment in several network environments."}),"\n",(0,s.jsx)(n.li,{children:"must follow good MLOps practices, guaranteeing modularity, reproducibility and complete automation of the ML lifecycle."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"interoperability",children:"Interoperability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The system must be interoperable, making available APIs and adopting machine learning frameworks."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);